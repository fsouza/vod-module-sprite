name: Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "3 1 * * 3"
jobs:
  build:
    strategy:
      matrix:
        go_version:
          - 1.14
          - 1.15
        os:
          - macos
          - ubuntu

    name: Build (${{ matrix.os }}/go-${{ matrix.go_version }})
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/setup-go@v2.1.3
        id: go
        with:
          stable: false
          go-version: ${{ matrix.go_version }}

      - uses: actions/checkout@v2.3.4

      - name: run-tests
        run: go test -mod readonly -race -coverprofile=coverage.txt -covermode=atomic -count 20

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: golangci/golangci-lint-action@v2.3.0

  staticcheck:
    name: staticcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2.1.3
        id: go
        with:
          stable: false
          go-version: 1.x

      - run: |
          GO111MODULE=on go get honnef.co/go/tools/cmd/staticcheck@master

      - name: get staticcheck version
        id: get-staticcheck-version
        run: |
          echo "::set-output name=version::$(staticcheck --version | sed -e 's/,//g')"

      - name: staticcheck cache
        id: staticcheck-cache
        uses: actions/cache@v2.1.3
        with:
          path: ~/.cache/staticcheck
          key: "${{ steps.get-staticcheck-version.outputs.version }}"

      - uses: actions/checkout@v2.3.4

      - name: run staticcheck
        run: |
          staticcheck ./...
